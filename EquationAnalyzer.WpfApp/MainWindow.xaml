<Window x:Class="EquationAnalyzer.WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:EquationAnalyzer.WpfApp"
        Title="Equation Analyzer" MinHeight="700" MinWidth="800" ScrollViewer.VerticalScrollBarVisibility="Disabled" Width="800" Height="700">

    <Grid>
        <Menu VerticalAlignment="Top">
            <MenuItem x:Name="mathMenuItem" Header="Math" Click="mathMenuItem_Click">
                <MenuItem Icon=" |x|" Header="Abs" />
                <MenuItem Icon=" ∡" Header="Acos" />
                <MenuItem Icon=" ∡" Header="Asin" />
                <MenuItem Icon=" ∡" Header="Atan" />
                <MenuItem Icon=" ∡" Header="Cos" />
                <MenuItem Icon=" ∡" Header="Cosh" />
                <MenuItem Icon=" eⁿ" Header="Exp" />
                <MenuItem Icon="a b" Header="Log" />
                <MenuItem Icon=" a" Header="Log10" />
                <MenuItem Icon=" &gt;" Header="Max" />
                <MenuItem Icon=" &lt;" Header="Min" />
                <MenuItem Icon=" xⁿ" Header="Pow" />
                <MenuItem Icon=" ∡" Header="Sin" />
                <MenuItem Icon=" ∡" Header="Sinh" />
                <MenuItem Icon=" √" Header="Sqrt" />
                <MenuItem Icon=" ∡" Header="Tan" />
                <MenuItem Icon=" ∡" Header="Tanh" />
                <Separator />
                <MenuItem Icon=" e" Header="E" />
                <MenuItem Icon=" π" Header="PI" />
            </MenuItem>
            <MenuItem x:Name="operatorsMenuItem" Header="Operators" Click="operatorsMenuItem_Click">
                <MenuItem Icon="  *" Header="Multiply" />
                <MenuItem Icon="  /" Header="Divide" />
                <MenuItem Icon="  +" Header="Add" />
                <MenuItem Icon="  -" Header="Subtract" />
                <MenuItem Icon="  %" Header="Modulo" />
                <Separator />
                <MenuItem Icon="&amp;&amp;" Header="And" FontSize="11" />
                <MenuItem Icon="  ||" Header="Or" />
            </MenuItem>
            <MenuItem x:Name="comparatorsMenuItem" Header="Comparators" Click="comparatorsMenuItem_Click">
                <MenuItem Icon="==" Header="Equal To"
                          ToolTip="Don't use this for testing numbers with decimals places. Use Greater and Lesser Than for a range instead. This works only with integers." />
                <MenuItem Icon="!=" Header="Unequal To" />
                <MenuItem Icon="&gt;=" Header="Greater Than or Equal To" />
                <MenuItem Icon="&gt;" Header="Greater Than" />
                <MenuItem Icon="&lt;=" Header="Lesser Than or Equal To" />
                <MenuItem Icon="&lt;" Header="Lesser Than" />
            </MenuItem>
            <MenuItem x:Name="variablesMenuItem" Header="Variables" Click="variablesMenuItem_Click" />
            <MenuItem x:Name="equationsMenuItem" Header="Equations" Click="equationsMenuItem_Click" />
        </Menu>

        <GroupBox Header="Variables" HorizontalAlignment="Left" Margin="10,35,0,0" VerticalAlignment="Top" Height="150">
            <DataGrid x:Name="equationVariablesGrid" Height="128" Width="248" DataContext="{Binding RelativeSource={RelativeSource Self}}" ItemsSource="{Binding NotifyOnSourceUpdated=True}" Binding.SourceUpdated="equationVariablesGrid_SourceUpdated" AutoGenerateColumns="False" Margin="0">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name, NotifyOnSourceUpdated=True, Mode=TwoWay}" Width="60" />
                    <DataGridTextColumn Header="Start" Binding="{Binding Start}" Width="60" />
                    <DataGridTextColumn Header="End" Binding="{Binding End}" Width="60" />
                    <DataGridTextColumn Header="Step Size" Binding="{Binding StepSize}" Width="60" />
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>

        <GroupBox Header="Equations" Margin="282,35,10,0" VerticalAlignment="Top" Height="150">
            <DataGrid x:Name="equationsGrid" VerticalAlignment="Top" Height="128" DataContext="{Binding RelativeSource={RelativeSource Self}}" ItemsSource="{Binding NotifyOnSourceUpdated=True}" Binding.SourceUpdated="equationsGrid_SourceUpdated"  AutoGenerateColumns="False" PreparingCellForEdit="preparingCellForEdit">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name, NotifyOnSourceUpdated=True, Mode=TwoWay}" Width="60" />
                    <DataGridTextColumn Header="Expression" Binding="{Binding Expression}" Width="*" />
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>

        <GroupBox Header="Tests" Margin="10,195,10,0" VerticalAlignment="Top" Height="200">
            <DataGrid x:Name="equationTestsGrid" VerticalAlignment="Top" Height="178" DataContext="{Binding RelativeSource={RelativeSource Self}}" AutoGenerateColumns="False" PreparingCellForEdit="preparingCellForEdit">
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Header="On" Binding="{Binding Active}" Width="30" />
                    <DataGridComboBoxColumn Header="Type" SelectedValueBinding="{Binding Type}" Width="60" />
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="60" />
                    <DataGridTextColumn Header="Expression" Binding="{Binding Expression}" Width="*" />
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>

        <Button x:Name="startTestsButton" Content="Run Tests" Margin="10,410,10,0" VerticalAlignment="Top" Click="Button_Click" />
        <ProgressBar x:Name="testingProgress" Height="10" Margin="10,435,10,0" VerticalAlignment="Top" />

        <GroupBox Header="Test Results" Margin="10,460,10,10">
            <TabControl x:Name="testResultsTabControl" DataContext="{Binding RelativeSource={RelativeSource Self}}">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </TabControl.ItemTemplate>

                <TabControl.ContentTemplateSelector>
                    <local:TestResultsDataTemplateSelector>
                        <local:TestResultsDataTemplateSelector.PointTestResultTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Text, Mode=OneWay}" IsReadOnly="True" BorderThickness="0" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" />
                            </DataTemplate>
                        </local:TestResultsDataTemplateSelector.PointTestResultTemplate>

                        <local:TestResultsDataTemplateSelector.RangeTestResultTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Text, Mode=OneWay}" IsReadOnly="True" BorderThickness="0" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" />
                            </DataTemplate>
                        </local:TestResultsDataTemplateSelector.RangeTestResultTemplate>
                    </local:TestResultsDataTemplateSelector>
                </TabControl.ContentTemplateSelector>
            </TabControl>
        </GroupBox>
    </Grid>
</Window>